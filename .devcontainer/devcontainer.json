// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.128.0/containers/alpine
{
  "name": "Alpine",
  "dockerComposeFile": [
    "./docker-compose.yml"
  ],
  "service": "server",
  "settings": {
    "terminal.integrated.shell.linux": "/bin/ash",
    "java.home": "/usr/lib/jvm/java-11-openjdk",
    "java.configuration.runtimes": [{
        "name": "JavaSE-1.8",
        "path": "/usr/lib/jvm/java-1.8-openjdk",
        "default": true
      },
      {
        "name": "JavaSE-11",
        "path": "/usr/lib/jvm/java-11-openjdk",
      },
    ]
  },
  // Add the IDs of extensions you want installed when the container is created.
  // Note that some extensions may not work in Alpine Linux. See https://aka.ms/vscode-remote/linux.
  "extensions": [
    "vscjava.vscode-java-pack",
    "esbenp.prettier-vscode",
    "dotjoshjohnson.xml",
  ],
  "workspaceFolder": "/workspace",
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],
  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "uname -a",
  // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
  // Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
  // "remoteUser": "vscode"
}